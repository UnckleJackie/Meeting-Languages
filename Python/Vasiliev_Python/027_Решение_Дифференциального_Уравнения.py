import math  # Импорт математического модуля
def solve_deqn(f, x0, y0, x):  # Функция для решения дифференциального ур-я
    n = 10000000  # Кол-во отрезков, на которые делится интервал поиска решения
    dx = (x - x0) / n  # Расстояние между соседними узловыми точками
    x = x0  # Начальная точка
    y = y0  # Начальное значение функции
    for k in range(1, n + 1):  # Оператор цикла для вычисления решения
        y = y + dx * f(x, y)  # Значение функции в узловой точке
        x = x + dx  # Следующая узловая точка
    return y  # Результат функции


def diff_eqn(x, y):  # Функция, определяющая дифф. ур-е
    return 2 * x - y  # Результат


def y(x):  # Функция точного решения ур-я
    return 2 * (x - 1) + 5 * math.exp(-x)

h = 0.5  # Шаг приращения по аргументу
for k in range(0, 6):  # Выч-е рез-та для неск зн-й аргумента
    x = k * h  # Значение аргумента
    print("Числовое решение: ")  # Числовое решение
    print("x = ", x, "-> y(x) = ", solve_deqn(diff_eqn, 0, 3, x))
    print("Точное решение: ")  # Точное решение
    print("x =", x, "-> y(x) =", y(x))